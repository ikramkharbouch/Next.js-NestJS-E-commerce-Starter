var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddItemDto.html",[0,0.061,1,2.105]],["body/classes/AddItemDto.html",[0,0.095,1,3.269,2,2.018,3,0.348,4,0.311,5,0.311,6,4.984,7,3.541,8,0.512,9,1.728,10,4.394,11,3.954,12,0.894,13,0.024,14,1.178,15,1.523,16,4.984,17,0.894,18,4.176,19,2.776,20,4.176,21,4.176,22,0.387,23,4.523,24,3.541,25,2.559,26,0.348,27,4.176,28,0.019,29,0.019]],["title/controllers/AppController.html",[30,1.35,31,2.31]],["body/controllers/AppController.html",[0,0.077,3,0.358,4,0.319,5,0.319,8,0.526,13,0.024,14,1.199,15,1.226,17,0.72,22,0.504,26,0.358,28,0.019,29,0.019,30,2.134,31,3.652,32,1.688,33,3.64,34,1.999,35,5.305,36,4.294,37,1.581,38,0.948,39,3.353,40,3.64,41,2.418,42,2.074,43,1.581,44,4.294]],["title/modules/AppModule.html",[45,1.186,46,2.31]],["body/modules/AppModule.html",[0,0.047,3,0.222,4,0.198,5,0.198,12,0.446,13,0.025,22,0.59,26,0.222,28,0.014,29,0.014,31,3.119,32,1.537,38,0.587,39,3.207,40,2.255,45,1.601,46,4.47,47,1.197,48,1.197,49,1.384,50,1.384,51,1.197,52,2.413,53,1.384,54,2.255,55,2.255,56,2.255,57,3.491,58,3.207,59,3.491,60,2.965,61,3.207,62,2.035,63,1.384,64,1.285,65,2.66,66,2.202,67,1.63,68,1.117,69,2.66,70,1.988,71,2.255,72,2.66,73,2.255,74,1.988,75,2.923,76,2.66,77,2.255,78,2.66,79,2.66,80,2.66,81,2.202,82,2.66,83,2.66,84,2.66,85,2.66,86,4.638,87,2.66,88,2.66,89,2.66,90,2.66,91,2.66,92,1.988,93,2.66,94,2.66,95,1.285,96,2.66,97,2.66,98,2.66,99,2.66,100,2.66,101,2.66,102,2.66,103,2.66,104,2.255,105,2.66]],["title/injectables/AppService.html",[39,1.934,106,0.92]],["body/injectables/AppService.html",[0,0.081,3,0.378,4,0.337,5,0.337,8,0.555,13,0.024,14,1.239,17,0.759,22,0.42,26,0.378,28,0.02,29,0.02,34,2.066,35,5.406,37,1.667,38,0.999,39,3.16,43,1.667,106,1.504,107,2.037,108,3.838,109,4.528,110,4.528,111,4.528]],["title/controllers/AuthController.html",[30,1.35,112,2.31]],["body/controllers/AuthController.html",[0,0.054,3,0.254,4,0.226,5,0.226,8,0.373,12,0.838,13,0.025,15,1.427,17,0.838,22,0.553,26,0.254,28,0.015,29,0.015,30,1.195,32,1.195,34,1.585,37,1.841,38,0.951,41,1.711,43,1.841,112,2.896,113,2.577,114,2.044,115,3.04,116,4.306,117,3.651,118,3.651,119,3.04,120,3.04,121,3.04,122,2.101,123,1.726,124,1.726,125,3.651,126,2.577,127,3.654,128,3.04,129,3.04,130,2.577,131,3.654,132,4.306,133,3.04,134,2.044,135,2.044,136,3.04,137,3.04,138,2.816,139,2.577,140,2.577,141,2.577,142,2.577,143,2.577,144,1.863,145,2.577,146,2.577,147,3.04,148,3.04,149,3.04,150,3.04,151,3.04,152,3.04,153,3.04,154,2.577,155,3.04,156,3.04,157,2.577]],["title/modules/AuthModule.html",[45,1.186,57,2.105]],["body/modules/AuthModule.html",[0,0.056,3,0.262,4,0.234,5,0.234,13,0.025,22,0.586,26,0.262,28,0.015,29,0.015,32,1.733,38,0.694,45,1.758,47,1.415,48,1.415,49,1.636,50,1.636,51,1.415,52,2.651,53,1.636,57,3.987,61,3.394,62,2.295,63,1.636,64,1.519,66,2.868,71,2.665,73,3.739,74,2.35,112,3.426,138,3.394,139,2.665,158,2.665,159,3.144,160,2.665,161,3.694,162,3.144,163,3.144,164,3.144,165,4.41,166,2.35,167,3.144,168,2.665,169,3.144,170,4.681,171,3.144,172,3.144,173,3.144,174,1.636,175,3.144,176,2.665,177,3.144,178,3.144,179,3.144]],["title/injectables/AuthService.html",[106,0.92,138,1.934]],["body/injectables/AuthService.html",[0,0.045,3,0.211,4,0.188,5,0.188,8,0.31,12,0.755,13,0.025,17,0.755,22,0.519,26,0.211,28,0.013,29,0.013,34,1.387,37,1.387,38,0.558,43,1.387,104,2.143,106,1.009,107,1.137,117,3.193,118,3.193,122,1.891,123,1.554,124,1.554,126,3.193,127,3.269,130,3.193,131,3.427,138,2.12,140,2.143,141,2.143,168,2.143,174,2.91,180,2.143,181,2.12,182,2.528,183,3.149,184,5.793,185,2.528,186,2.528,187,3.193,188,2.528,189,2.528,190,2.528,191,2.528,192,3.766,193,2.308,194,3.55,195,3.766,196,3.588,197,2.528,198,3.027,199,2.758,200,2.528,201,2.528,202,3.365,203,2.528,204,1.7,205,2.596,206,2.528,207,2.528,208,3.193,209,2.528,210,3.766,211,3.766,212,3.766,213,2.528,214,2.528,215,2.528,216,2.143,217,2.528,218,2.528,219,1.221,220,2.528,221,2.528,222,2.528]],["title/entities/Cart.html",[223,1.186,224,1.659]],["body/entities/Cart.html",[0,0.061,3,0.286,4,0.255,5,0.255,8,0.42,9,1.516,12,0.96,13,0.024,14,1.033,15,1.635,17,0.96,22,0.434,26,0.286,28,0.016,29,0.016,81,3.226,95,1.655,223,1.616,224,2.575,225,2.905,226,3.267,227,2.24,228,3.586,229,3.985,230,3.853,231,3.586,232,3.426,233,3.148,234,3.426,235,3.222,236,2.905,237,4.68,238,3.968,239,3.968,240,3.426,241,3.985,242,3.426,243,1.929,244,3.968,245,1.347,246,1.929]],["title/controllers/CartController.html",[30,1.35,247,2.31]],["body/controllers/CartController.html",[0,0.057,1,3.878,3,0.264,4,0.236,5,0.236,8,0.388,12,0.743,13,0.024,14,1.334,15,1.459,17,0.857,22,0.474,26,0.264,28,0.015,29,0.015,30,1.244,32,1.244,34,1.631,37,1.882,38,0.699,41,1.782,42,1.529,43,1.882,114,2.129,122,1.862,123,1.53,124,1.53,134,3.439,135,2.981,224,1.529,227,2.327,247,2.981,248,2.684,249,4.334,250,2.882,251,2.981,252,3.166,253,4.431,254,3.166,255,3.166,256,2.129,257,3.757,258,3.166,259,2.684,260,4.334,261,2.661,262,2.684,263,2.684,264,2.684,265,3.166,266,3.166,267,2.684,268,3.166,269,3.166,270,3.166]],["title/entities/CartItem.html",[223,1.186,235,1.787]],["body/entities/CartItem.html",[0,0.056,3,0.262,4,0.234,5,0.234,8,0.385,9,1.429,10,3.807,11,3.426,12,1.01,13,0.025,14,0.973,15,1.66,17,0.975,19,2.873,22,0.472,26,0.262,28,0.015,29,0.015,81,2.483,95,1.519,223,1.522,224,3.102,227,2.14,235,2.295,239,3.739,243,2.868,245,1.236,271,5.11,272,2.35,273,3.221,274,3.296,275,3.296,276,3.144,277,3.144,278,3.144,279,3.384,280,3.144,281,2.115,282,3.739,283,3.144,284,3.807,285,3.144,286,3.144]],["title/modules/CartModule.html",[45,1.186,58,1.934]],["body/modules/CartModule.html",[0,0.06,3,0.283,4,0.252,5,0.252,13,0.024,22,0.586,26,0.283,28,0.016,29,0.016,32,1.825,38,0.748,45,1.83,47,1.525,48,1.525,49,1.763,50,1.763,51,1.525,52,2.758,53,2.758,58,3.675,60,3.211,62,2.417,63,1.763,64,1.637,66,2.615,67,2.076,68,1.423,70,2.533,224,1.637,235,2.417,246,1.908,247,3.565,261,3.498,262,2.872,287,2.872,288,3.388,289,2.872,290,2.872,291,3.388,292,3.388,293,2.872,294,2.872,295,3.388]],["title/injectables/CartService.html",[106,0.92,261,1.787]],["body/injectables/CartService.html",[0,0.031,1,3.092,3,0.145,4,0.129,5,0.129,8,0.213,11,3.012,12,0.751,13,0.025,14,1.283,17,0.803,19,2.824,22,0.468,26,0.145,28,0.01,29,0.01,34,1.037,37,1.649,38,0.384,42,1.36,43,1.649,68,0.731,106,0.754,107,0.783,122,1.881,123,1.546,124,1.546,174,3.159,181,1.586,193,1.726,194,3.416,196,3.012,198,2.386,199,2.499,224,2.622,227,2.013,228,1.17,235,2.122,245,0.684,246,0.98,249,2.387,250,2.122,251,1.894,256,1.894,261,1.466,263,1.475,264,1.475,273,1.466,275,1.301,293,1.475,294,1.475,296,1.475,297,2.816,298,3.548,299,1.74,300,2.499,301,2.437,302,1.74,303,2.816,304,2.816,305,1.74,306,3.048,307,3.75,308,1.74,309,1.74,310,2.816,311,5.702,312,1.74,313,1.74,314,1.74,315,2.652,316,1.17,317,1.475,318,1.74,319,1.74,320,1.74,321,1.74,322,1.74,323,1.74,324,3.008,325,3.548,326,1.74,327,2.816,328,1.74,329,3.008,330,1.74,331,1.74,332,1.74,333,2.816,334,1.74,335,1.74,336,1.74,337,1.74,338,1.74,339,1.74,340,3.548,341,1.74,342,3.548,343,1.475,344,2.816,345,2.387,346,1.74]],["title/classes/CreateOrderDto.html",[0,0.061,347,2.31]],["body/classes/CreateOrderDto.html",[0,0.1,2,2.187,3,0.378,4,0.337,5,0.337,8,0.555,9,1.818,12,0.759,13,0.024,14,1.239,15,1.292,16,5.172,17,0.759,22,0.42,25,2.775,26,0.378,28,0.02,29,0.02,306,4.56,347,3.775,348,4.758,349,3.838,350,4.528]],["title/classes/CreateProductDto.html",[0,0.061,351,1.934]],["body/classes/CreateProductDto.html",[0,0.085,2,1.706,3,0.295,4,0.263,5,0.263,8,0.433,9,1.548,12,0.973,13,0.024,14,1.281,15,1.656,17,0.973,19,3.019,22,0.328,23,4.051,24,2.994,25,2.164,26,0.295,28,0.017,29,0.017,123,1.869,124,1.65,351,2.69,352,5.138,353,2.64,354,3.642,355,4.048,356,4.591,357,3.532,358,3.532,359,3.532,360,3.532,361,3.532,362,3.532,363,3.532,364,3.532,365,3.532,366,4.048,367,4.778,368,4.778,369,4.778,370,3.532,371,2.376,372,4.778]],["title/classes/CreateUserDto.html",[0,0.061,373,2.31]],["body/classes/CreateUserDto.html",[0,0.072,2,1.955,3,0.338,4,0.301,5,0.301,8,0.496,9,1.694,12,1.026,13,0.023,14,1.478,17,1.026,26,0.338,28,0.018,29,0.018,124,2.113,202,4.329,219,2.798,373,3.517,374,5.373,375,3.431,376,4.329,377,4.329,378,4.047,379,4.047,380,4.047,381,4.047]],["title/injectables/JwtAuthGuard.html",[106,0.92,144,2.105]],["body/injectables/JwtAuthGuard.html",[0,0.085,3,0.395,4,0.353,5,0.353,13,0.024,22,0.535,26,0.395,28,0.02,29,0.02,38,1.046,106,1.546,107,2.132,144,3.537,166,3.542,382,4.017,383,4.017,384,4.315,385,5.772,386,4.738]],["title/injectables/JwtStrategy.html",[106,0.92,161,2.105]],["body/injectables/JwtStrategy.html",[0,0.063,3,0.294,4,0.262,5,0.262,8,0.431,12,0.799,13,0.025,17,0.799,22,0.537,26,0.294,28,0.017,29,0.017,34,1.755,37,1.295,38,0.777,41,1.981,43,1.295,74,2.63,106,1.277,107,1.583,122,2.002,123,1.645,124,1.645,145,2.983,161,2.92,166,2.63,170,5.29,174,2.812,176,2.983,181,1.981,187,2.983,216,2.983,219,1.7,384,3.562,387,2.983,388,4.766,389,4.766,390,3.518,391,3.518,392,4.766,393,3.518,394,3.518,395,3.518,396,3.518,397,3.518,398,3.518,399,3.518,400,3.518,401,3.518,402,3.518,403,3.518,404,2.367,405,3.518,406,3.518]],["title/classes/LoginDto.html",[0,0.061,127,2.105]],["body/classes/LoginDto.html",[0,0.096,2,2.046,3,0.353,4,0.315,5,0.315,8,0.519,9,1.743,12,0.902,13,0.024,14,1.374,15,1.536,17,0.902,22,0.393,25,2.595,26,0.353,28,0.019,29,0.019,92,4.423,127,3.298,219,2.858,366,4.023,407,3.59,408,5.016,409,4.234,410,3.59,411,4.234,412,3.59,413,3.59]],["title/entities/Order.html",[223,1.186,414,1.934]],["body/entities/Order.html",[0,0.046,3,0.216,4,0.192,5,0.192,8,0.317,9,1.24,12,1.026,13,0.025,14,1.113,15,1.666,17,0.978,19,1.993,22,0.423,26,0.319,28,0.013,29,0.013,81,2.156,95,1.249,204,2.575,205,3.037,223,1.322,226,2.795,227,1.916,228,3.068,230,2.575,231,3.068,233,2.575,236,2.191,238,3.246,243,1.455,244,3.246,245,1.016,246,1.455,274,1.932,279,3.299,281,2.575,284,2.862,329,3.246,371,2.575,404,3.068,414,2.568,415,1.932,416,4.561,417,3.866,418,2.585,419,2.585,420,2.839,421,3.829,422,2.585,423,4.564,424,5.384,425,3.246,426,2.585,427,2.585,428,2.862,429,2.862,430,2.862,431,2.585,432,2.585,433,2.585,434,2.585,435,3.246,436,3.246,437,3.246,438,3.246,439,3.246,440,2.585]],["title/entities/OrderItem.html",[223,1.186,420,1.934]],["body/entities/OrderItem.html",[0,0.054,3,0.254,4,0.227,5,0.227,8,0.374,9,1.398,10,3.745,11,3.37,12,1.029,13,0.024,14,1.203,15,1.704,17,1.001,19,3.106,22,0.4,26,0.254,28,0.015,29,0.015,95,1.473,123,1.73,204,2.903,223,1.49,227,2.105,243,2.821,245,1.199,272,2.28,274,2.28,279,3.842,281,2.051,284,3.226,355,3.745,371,2.903,414,3.59,420,2.43,428,3.226,429,3.226,430,3.226,441,5.203,442,3.05,443,3.05,444,4.316,445,3.05,446,3.05,447,3.05,448,3.05,449,3.05]],["title/controllers/OrdersController.html",[30,1.35,450,2.31]],["body/controllers/OrdersController.html",[0,0.059,3,0.276,4,0.246,5,0.246,8,0.405,12,0.765,13,0.025,15,1.303,17,0.765,22,0.523,26,0.276,28,0.016,29,0.016,30,1.298,32,1.298,34,1.68,37,1.68,38,0.729,41,1.86,42,1.596,43,1.68,114,2.221,122,1.917,123,1.576,124,1.576,125,4.782,134,2.221,135,3.07,142,2.8,143,2.8,144,2.797,146,2.8,154,2.8,157,2.8,219,1.596,347,4.221,404,2.221,450,3.07,451,2.8,452,3.303,453,4.564,454,4.564,455,3.303,456,4.564,457,3.303,458,3.303,459,3.303,460,2.944,461,2.8,462,3.303,463,2.221,464,3.303,465,3.303,466,3.303,467,3.303,468,3.303,469,3.303,470,3.303,471,3.303,472,3.303]],["title/modules/OrdersModule.html",[45,1.186,59,2.105]],["body/modules/OrdersModule.html",[0,0.06,3,0.281,4,0.25,5,0.25,13,0.025,22,0.596,26,0.281,28,0.016,29,0.016,32,1.816,38,0.742,45,1.823,47,1.513,48,1.513,49,1.75,50,1.75,51,1.513,52,2.747,53,1.75,58,3.466,59,4.041,60,3.204,62,2.405,63,1.75,64,1.625,66,2.602,67,2.061,68,1.413,70,2.514,77,2.851,246,1.894,414,1.894,420,2.602,450,3.551,460,3.466,461,2.851,473,2.851,474,3.363,475,2.851,476,3.363,477,3.363,478,2.851,479,2.851,480,3.363]],["title/injectables/OrdersService.html",[106,0.92,460,1.934]],["body/injectables/OrdersService.html",[0,0.042,3,0.198,4,0.177,5,0.177,8,0.291,12,0.727,13,0.025,14,1.321,17,0.727,22,0.526,26,0.198,28,0.013,29,0.013,34,1.324,37,1.324,38,0.525,42,2.095,43,1.324,68,0.999,106,0.963,107,1.069,122,1.822,123,1.497,124,1.497,174,2.844,181,2.025,193,2.658,194,2.964,196,1.599,198,1.599,199,2.658,224,1.737,226,1.457,228,1.599,235,1.237,245,0.934,246,1.338,250,1.237,261,2.953,275,1.777,300,2.964,301,2.742,306,1.777,307,3.253,315,1.777,316,1.599,317,2.015,343,3.049,345,2.015,404,3.675,414,2.723,417,3.677,420,2.442,460,2.025,478,2.015,479,2.015,481,2.015,482,3.596,483,3.596,484,2.377,485,2.377,486,3.596,487,3.596,488,2.377,489,3.596,490,2.377,491,2.377,492,2.377,493,2.377,494,2.377,495,2.419,496,2.377,497,2.377,498,2.377,499,2.377,500,2.377,501,2.377,502,2.377,503,2.377,504,2.377,505,2.377,506,3.596,507,2.377,508,2.377,509,2.377,510,2.377,511,2.377,512,2.377,513,2.377]],["title/entities/Product.html",[223,1.186,273,1.787]],["body/entities/Product.html",[0,0.053,3,0.249,4,0.222,5,0.222,8,0.366,9,1.379,12,1.079,13,0.024,14,1.309,15,1.742,17,1.023,19,2.81,22,0.277,26,0.249,28,0.015,29,0.015,81,2.396,95,1.444,123,1.711,204,2.863,223,1.469,226,3.037,227,2.082,229,3.704,230,3.632,231,3.333,233,2.863,241,3.704,243,1.683,245,1.175,273,2.215,279,3.634,281,3.333,282,3.608,354,3.333,355,3.704,356,4.201,371,2.863,428,3.182,429,3.182,430,3.182,514,2.535,515,2.99,516,4.256,517,3.608,518,2.99,519,2.99,520,2.99,521,2.99,522,2.99,523,2.99]],["title/controllers/ProductsController.html",[30,1.35,524,2.31]],["body/controllers/ProductsController.html",[0,0.047,3,0.221,4,0.197,5,0.197,8,0.324,12,0.855,13,0.025,14,1.359,15,1.551,17,0.911,22,0.473,26,0.221,28,0.014,29,0.014,30,1.039,32,1.039,34,1.434,37,2.001,38,0.584,41,1.489,42,1.278,43,2.001,114,1.779,122,2.142,123,1.76,124,1.76,134,3.109,135,2.619,227,2.388,250,2.026,251,2.619,256,1.779,257,3.301,259,2.242,260,4.323,267,2.242,301,2.233,351,3.201,463,1.779,524,2.619,525,2.242,526,2.645,527,4.323,528,3.301,529,3.301,530,2.242,531,2.645,532,2.645,533,2.645,534,2.242,535,3.894,536,2.645,537,2.242,538,3.696,539,3.894,540,2.645,541,2.645,542,2.645,543,2.242,544,2.911,545,2.242,546,2.645,547,2.645,548,2.645,549,2.645,550,2.645,551,2.645,552,2.645,553,2.645,554,2.645]],["title/modules/ProductsModule.html",[45,1.186,60,1.787]],["body/modules/ProductsModule.html",[0,0.066,3,0.31,4,0.277,5,0.277,13,0.024,22,0.572,26,0.31,28,0.017,29,0.017,32,1.944,38,0.821,45,1.919,47,1.673,48,1.673,49,1.935,50,1.935,51,1.673,52,2.892,53,2.892,60,3.368,62,2.574,63,1.935,64,1.796,66,2.094,67,2.279,68,1.562,273,1.935,301,3.296,524,3.738,543,3.152,555,3.152,556,3.152,557,3.152,558,3.719,559,3.719,560,3.152,561,3.719]],["title/injectables/ProductsService.html",[106,0.92,301,1.659]],["body/injectables/ProductsService.html",[0,0.04,3,0.187,4,0.167,5,0.167,8,0.275,12,0.849,13,0.025,14,1.299,17,0.896,22,0.495,26,0.187,28,0.012,29,0.012,34,1.267,37,1.864,38,0.495,42,1.084,43,1.728,68,0.942,106,0.922,107,1.009,122,2.127,123,1.748,124,1.748,174,3.062,181,1.937,193,1.374,194,2.876,196,2.815,198,2.815,199,2.565,208,1.901,227,2.604,245,0.881,250,1.79,251,2.314,256,2.314,273,2.894,300,2.876,301,1.662,307,4.04,315,1.677,316,1.509,324,3.548,351,2.85,463,1.509,495,1.509,527,3.979,528,2.917,529,2.917,530,2.917,534,2.917,537,2.917,538,3.517,544,2.572,545,1.901,560,1.901,562,1.901,563,2.243,564,2.243,565,3.44,566,2.243,567,2.243,568,2.243,569,2.243,570,2.243,571,2.243,572,2.243,573,3.44,574,2.243,575,2.243,576,4.185,577,2.243,578,2.243,579,2.243]],["title/classes/RegisterDto.html",[0,0.061,131,2.105]],["body/classes/RegisterDto.html",[0,0.089,2,1.826,3,0.315,4,0.281,5,0.281,8,0.463,9,1.62,12,0.999,13,0.024,14,1.456,15,1.702,17,0.999,22,0.351,25,2.316,26,0.315,28,0.017,29,0.017,92,4.188,131,3.064,219,2.707,366,4.762,376,4.188,377,4.188,408,4.75,410,3.205,412,3.205,413,3.205,580,3.205,581,3.78,582,3.78,583,3.78,584,3.78]],["title/classes/UpdateProductDto.html",[0,0.061,538,2.105]],["body/classes/UpdateProductDto.html",[0,0.084,2,2.277,3,0.393,4,0.351,5,0.351,13,0.024,22,0.534,26,0.393,28,0.02,29,0.02,250,2.453,351,2.654,353,3.524,384,4.301,538,3.526,544,3.524,585,3.996,586,5.754,587,4.714,588,3.996,589,3.996]],["title/entities/User.html",[205,1.787,223,1.186]],["body/entities/User.html",[0,0.055,3,0.256,4,0.228,5,0.228,8,0.376,9,1.405,12,1.031,13,0.024,14,1.429,15,1.755,17,1.031,22,0.285,26,0.256,28,0.015,29,0.015,81,3.368,95,1.483,124,1.886,202,3.759,205,2.257,219,2.429,223,1.497,226,3.081,227,2.113,229,3.759,230,3.675,231,3.382,233,2.917,241,3.759,243,1.729,245,1.207,279,3.666,376,3.759,377,3.759,517,3.677,590,2.603,591,3.07,592,3.07,593,3.07,594,4.337,595,3.07,596,3.07,597,3.07,598,3.07,599,3.07,600,3.07]],["title/modules/UsersModule.html",[45,1.186,61,1.934]],["body/modules/UsersModule.html",[0,0.069,3,0.322,4,0.287,5,0.287,13,0.024,22,0.557,26,0.322,28,0.018,29,0.018,38,0.852,45,1.954,47,1.737,48,1.737,49,2.008,50,2.008,51,1.737,52,2.946,53,2.946,61,3.677,62,2.638,63,2.008,64,1.865,66,2.173,67,2.365,68,1.622,183,3.863,205,2.008,601,3.272,602,3.272,603,3.272,604,3.86,605,3.86,606,3.272,607,3.86]],["title/injectables/UsersService.html",[106,0.92,183,1.934]],["body/injectables/UsersService.html",[0,0.057,3,0.267,4,0.238,5,0.238,8,0.392,12,0.862,13,0.025,14,1.135,17,0.862,22,0.543,26,0.267,28,0.016,29,0.016,34,1.643,37,1.643,38,0.706,42,1.545,43,1.643,68,1.344,106,1.196,107,1.439,122,2.16,123,1.775,124,1.775,174,3.154,181,2.513,183,2.513,193,1.96,194,1.96,205,2.323,219,2.156,245,1.257,250,2.323,300,3.409,307,3.742,316,2.152,373,3.936,463,2.152,606,2.712,608,2.712,609,4.464,610,3.199,611,3.199,612,4.464,613,4.464,614,3.199,615,4.464,616,3.199,617,3.199,618,3.199,619,3.199,620,3.199,621,3.199]],["title/coverage.html",[622,3.504]],["body/coverage.html",[0,0.104,1,1.593,5,0.193,6,2.204,7,2.204,12,0.436,13,0.024,28,0.013,29,0.013,30,2.121,31,1.748,33,2.204,39,1.464,51,1.17,75,1.943,106,1.608,108,2.204,112,1.748,113,2.204,127,1.593,131,1.593,138,1.464,144,1.593,161,1.593,180,2.204,183,1.464,199,1.593,205,1.353,223,1.951,224,1.256,225,2.204,235,1.353,247,1.748,248,2.204,261,1.353,271,2.204,272,2.874,273,1.353,296,2.204,301,1.256,347,1.748,348,2.204,349,2.204,351,1.464,352,2.204,353,2.874,373,1.748,374,2.204,375,2.204,382,2.204,383,2.204,387,2.204,407,2.204,414,1.464,415,1.943,420,1.464,441,2.204,450,1.748,451,2.204,460,1.464,481,2.204,495,4.659,514,2.204,524,1.748,525,2.204,538,1.593,562,2.204,580,2.204,585,2.204,590,2.204,608,2.204,622,1.943,623,2.204,624,2.599,625,2.599,626,4.576,627,5.397,628,5.057,629,4.576,630,6.235,631,3.845,632,2.204,633,2.599,634,2.204,635,2.599,636,2.599,637,2.599,638,2.599]],["title/dependencies.html",[48,1.859,639,2.431]],["body/dependencies.html",[13,0.024,28,0.02,29,0.02,38,1.004,48,2.047,68,1.912,245,1.788,588,3.857,589,3.857,640,6.114,641,4.55,642,4.55,643,4.55,644,4.55,645,4.55,646,4.55,647,4.55,648,4.55,649,4.55,650,4.55,651,4.55,652,4.55,653,4.55,654,4.55,655,4.55]],["title/miscellaneous/enumerations.html",[656,1.615,657,3.502]],["body/miscellaneous/enumerations.html",[8,0.578,13,0.024,28,0.02,29,0.02,415,3.524,423,4.878,435,4.878,436,4.878,437,4.878,438,4.878,439,4.878,656,2.654,657,3.996,658,4.714,659,5.622]],["title/miscellaneous/functions.html",[656,1.615,660,3.502]],["body/miscellaneous/functions.html",[8,0.64,13,0.021,28,0.021,29,0.021,51,2.92,634,4.43,656,2.942,660,4.43,661,5.225]],["title/index.html",[8,0.421,662,3.435]],["body/index.html",[4,0.167,13,0.023,28,0.012,29,0.012,64,2.583,300,1.378,354,1.512,622,1.681,623,2.922,663,2.248,664,2.248,665,4.192,666,3.447,667,2.248,668,2.248,669,2.248,670,2.248,671,3.447,672,4.192,673,2.248,674,2.248,675,4.7,676,2.248,677,4.7,678,5.743,679,2.248,680,5.567,681,2.248,682,2.248,683,2.248,684,3.447,685,2.248,686,3.447,687,2.248,688,4.192,689,2.248,690,3.447,691,2.248,692,2.248,693,2.248,694,2.248,695,2.248,696,4.7,697,5.743,698,5.347,699,2.248,700,3.447,701,2.248,702,2.248,703,2.248,704,2.248,705,2.248,706,5.347,707,3.447,708,4.7,709,2.248,710,3.447,711,2.248,712,2.248,713,3.447,714,5.347,715,4.7,716,2.248,717,3.447,718,2.248,719,2.248,720,2.248,721,2.248,722,4.7,723,2.248,724,2.248,725,2.248,726,2.248,727,3.447,728,2.248,729,2.248,730,2.248,731,2.248,732,2.248,733,3.447,734,2.248,735,2.248,736,2.248,737,3.447,738,2.248,739,2.248,740,3.984,741,3.447,742,2.248,743,2.248,744,2.248,745,2.248,746,2.248,747,2.248,748,2.248,749,2.248,750,3.447,751,2.248,752,2.248,753,2.248,754,2.248,755,4.192,756,2.248,757,2.248,758,2.248,759,2.248,760,2.248,761,2.248,762,3.447,763,2.248,764,2.248,765,2.248,766,2.248,767,2.248,768,3.447,769,2.248,770,2.248,771,2.248,772,3.447,773,3.447,774,2.248,775,2.248,776,2.248,777,2.248,778,2.248,779,2.248,780,2.248,781,2.248,782,2.248,783,2.248,784,2.248,785,1.906,786,2.248,787,2.248,788,2.248,789,2.248,790,2.248,791,2.248,792,1.906]],["title/modules.html",[47,2.109]],["body/modules.html",[13,0.02,28,0.02,29,0.02,46,3.107,47,2.078,57,2.831,58,2.601,59,2.831,60,2.404,61,2.601,740,5.691,793,6.713,794,6.713,795,6.713]],["title/overview.html",[796,3.975]],["body/overview.html",[2,1.408,13,0.024,28,0.015,29,0.015,32,1.145,39,2.751,45,1.006,46,4.475,47,1.311,48,1.311,49,1.516,50,1.516,51,1.311,52,1.516,53,1.516,54,2.47,55,2.47,56,2.47,57,3.865,58,3.551,59,3.865,60,3.224,61,3.41,62,2.174,63,1.516,64,1.408,95,1.408,107,1.311,138,2.751,158,2.47,160,2.47,161,2.994,183,3.41,261,3.151,287,2.47,289,2.47,290,2.47,301,2.926,460,2.751,473,2.47,475,2.47,495,1.96,555,2.47,556,2.47,557,2.47,601,2.47,602,2.47,603,2.47,796,2.47,797,4.178,798,2.914,799,2.914,800,2.914]],["title/properties.html",[9,1.338,639,2.431]],["body/properties.html",[9,1.664,13,0.024,28,0.021,29,0.021,354,3.455,785,4.355,792,4.355,801,5.137,802,5.137,803,5.137]],["title/routes.html",[804,3.975]],["body/routes.html",[13,0.022,28,0.022,29,0.022,804,4.614]],["title/miscellaneous/variables.html",[656,1.615,805,3.502]],["body/miscellaneous/variables.html",[8,0.619,13,0.023,28,0.021,29,0.021,75,4.484,425,4.283,632,4.283,656,2.845,659,4.283,805,4.283,806,5.052,807,5.052,808,5.052,809,5.052]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":495,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.1",{"_index":802,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0.3.27",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["10.0.0",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":371,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["2.1.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["2})@min(0",{"_index":362,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["5",{"_index":798,"title":{},"body":{"overview.html":{}}}],["5432",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":797,"title":{},"body":{"overview.html":{}}}],["7",{"_index":800,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":799,"title":{},"body":{"overview.html":{}}}],["8.16.3",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["__dirname",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["access_token",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["additem",{"_index":249,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["additem(cartid",{"_index":304,"title":{},"body":{"injectables/CartService.html":{}}}],["additem(id",{"_index":252,"title":{},"body":{"controllers/CartController.html":{}}}],["additemdto",{"_index":1,"title":{"classes/AddItemDto.html":{}},"body":{"classes/AddItemDto.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["additemdto.productid",{"_index":331,"title":{},"body":{"injectables/CartService.html":{}}}],["additemdto.quantity",{"_index":333,"title":{},"body":{"injectables/CartService.html":{}}}],["allowing",{"_index":728,"title":{},"body":{"index.html":{}}}],["already",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":778,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":31,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":698,"title":{},"body":{"index.html":{}}}],["applications",{"_index":671,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":46,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/api/src/auth/auth.module.ts",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["appservice",{"_index":39,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{}}}],["auth.guard.ts",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":462,"title":{},"body":{"controllers/OrdersController.html":{}}}],["authcontroller",{"_index":112,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":385,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":57,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":785,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":138,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["aws",{"_index":717,"title":{},"body":{"index.html":{}}}],["backers",{"_index":779,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":491,"title":{},"body":{"injectables/OrdersService.html":{}}}],["badrequestexception('cannot",{"_index":496,"title":{},"body":{"injectables/OrdersService.html":{}}}],["based",{"_index":712,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(registerdto.password",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["board",{"_index":771,"title":{},"body":{"index.html":{}}}],["body",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{}}}],["bootstrap",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":795,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":793,"title":{},"body":{"modules.html":{}}}],["building",{"_index":666,"title":{},"body":{"index.html":{}}}],["cancelled",{"_index":439,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["cart",{"_index":224,"title":{"entities/Cart.html":{}},"body":{"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["cart.controller",{"_index":292,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.entity",{"_index":285,"title":{},"body":{"entities/CartItem.html":{}}}],["cart.items",{"_index":275,"title":{},"body":{"entities/CartItem.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["cart.items.filter((item",{"_index":346,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items.find",{"_index":328,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items.find((item",{"_index":341,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items.length",{"_index":345,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["cart.items.push(newcartitem",{"_index":339,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.service",{"_index":262,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["cart/cart.service",{"_index":492,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cartcontroller",{"_index":247,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartid",{"_index":306,"title":{},"body":{"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{}}}],["cartitem",{"_index":235,"title":{"entities/CartItem.html":{}},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["cartitem.cart",{"_index":237,"title":{},"body":{"entities/Cart.html":{}}}],["cartitem.product.name",{"_index":504,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cartitem.product.price",{"_index":506,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cartitem.productid",{"_index":502,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cartitem.quantity",{"_index":343,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["cartitemid",{"_index":311,"title":{},"body":{"injectables/CartService.html":{}}}],["cartmodule",{"_index":58,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["cartrepository",{"_index":303,"title":{},"body":{"injectables/CartService.html":{}}}],["cartservice",{"_index":261,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["cascade",{"_index":238,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["channel",{"_index":743,"title":{},"body":{"index.html":{}}}],["check",{"_index":706,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["clicks",{"_index":727,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":711,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":287,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_exports",{"_index":290,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_imports",{"_index":288,"title":{},"body":{"modules/CartModule.html":{}}}],["cluster_cartmodule_providers",{"_index":289,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":473,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_imports",{"_index":474,"title":{},"body":{"modules/OrdersModule.html":{}}}],["cluster_ordersmodule_providers",{"_index":475,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":555,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":557,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":556,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":601,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":603,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":602,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":279,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":594,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":281,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["column({unique",{"_index":592,"title":{},"body":{"entities/User.html":{}}}],["come",{"_index":734,"title":{},"body":{"index.html":{}}}],["config.schema",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_secret",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configvalidationschema",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception('email",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(cartrepository",{"_index":299,"title":{},"body":{"injectables/CartService.html":{}}}],["constructor(configservice",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(orderrepository",{"_index":484,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(private",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productrepository",{"_index":563,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(userrepository",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":468,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller",{"_index":30,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cart",{"_index":265,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('orders",{"_index":465,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('products",{"_index":546,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controllers",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["courses",{"_index":749,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":622,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":250,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":547,"title":{},"body":{"controllers/ProductsController.html":{}}}],["create(createproductdto",{"_index":530,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["create(createuserdto",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":226,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":231,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["createfromcart",{"_index":482,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createfromcart(cartid",{"_index":487,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createorder",{"_index":453,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(@request",{"_index":466,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(req",{"_index":455,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorderdto",{"_index":347,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["createproductdto",{"_index":351,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["creates",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["createuserdto",{"_index":373,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":230,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["decimal",{"_index":428,"title":{},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["declarations",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["deeper",{"_index":745,"title":{},"body":{"index.html":{}}}],["default",{"_index":425,"title":{},"body":{"entities/Order.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":542,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete(':id",{"_index":535,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delivered",{"_index":438,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":48,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":696,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":716,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":707,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":726,"title":{},"body":{"index.html":{}}}],["desc",{"_index":513,"title":{},"body":{"injectables/OrdersService.html":{}}}],["description",{"_index":354,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["development",{"_index":681,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":757,"title":{},"body":{"index.html":{}}}],["discord",{"_index":742,"title":{},"body":{"index.html":{}}}],["dive",{"_index":744,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":623,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/add",{"_index":263,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["dto/create",{"_index":463,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":545,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["e2e",{"_index":691,"title":{},"body":{"index.html":{}}}],["eager",{"_index":239,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{}}}],["efficient",{"_index":667,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":704,"title":{},"body":{"index.html":{}}}],["email",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrdersController.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":497,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ensure",{"_index":702,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":761,"title":{},"body":{"index.html":{}}}],["entities",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/cart",{"_index":294,"title":{},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{}}}],["entities/cart.entity",{"_index":293,"title":{},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{}}}],["entities/order",{"_index":479,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["entities/order.entity",{"_index":478,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["entities/product.entity",{"_index":560,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["entities/user.entity",{"_index":606,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":223,"title":{"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/User.html":{}},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":424,"title":{},"body":{"entities/Order.html":{}}}],["enumerations",{"_index":657,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":677,"title":{},"body":{"index.html":{}}}],["existingitem",{"_index":327,"title":{},"body":{"injectables/CartService.html":{}}}],["existingitem.quantity",{"_index":332,"title":{},"body":{"injectables/CartService.html":{}}}],["existinguser",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":747,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":26,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateProductDto.html":{}}}],["extractjwt",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fast",{"_index":720,"title":{},"body":{"index.html":{}}}],["features",{"_index":730,"title":{},"body":{"index.html":{}}}],["few",{"_index":722,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":527,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyemail",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmyorders",{"_index":454,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findmyorders(@request",{"_index":471,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findmyorders(req",{"_index":458,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findone",{"_index":251,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findone(@param('id",{"_index":267,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{}}}],["findone(id",{"_index":256,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["finduserorders",{"_index":483,"title":{},"body":{"injectables/OrdersService.html":{}}}],["finduserorders(userid",{"_index":489,"title":{},"body":{"injectables/OrdersService.html":{}}}],["firstname",{"_index":376,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["focus",{"_index":729,"title":{},"body":{"index.html":{}}}],["follow",{"_index":765,"title":{},"body":{"index.html":{}}}],["found",{"_index":324,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{}}}],["framework",{"_index":665,"title":{},"body":{"index.html":{}}}],["full",{"_index":760,"title":{},"body":{"index.html":{}}}],["function",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":660,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":725,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":257,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{}}}],["get('profile",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["graph",{"_index":752,"title":{},"body":{"index.html":{}}}],["grow",{"_index":775,"title":{},"body":{"index.html":{}}}],["hands",{"_index":746,"title":{},"body":{"index.html":{}}}],["handy",{"_index":735,"title":{},"body":{"index.html":{}}}],["hello",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":750,"title":{},"body":{"index.html":{}}}],["here",{"_index":783,"title":{},"body":{"index.html":{}}}],["host",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('login",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":789,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":227,"title":{},"body":{"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/User.html":{}}}],["identifier",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":22,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":709,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":732,"title":{},"body":{"index.html":{}}}],["initiallength",{"_index":344,"title":{},"body":{"injectables/CartService.html":{}}}],["inject",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":106,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":316,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(cart",{"_index":318,"title":{},"body":{"injectables/CartService.html":{}}}],["injectrepository(order",{"_index":493,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository(product",{"_index":571,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(user",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":724,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":679,"title":{},"body":{"index.html":{}}}],["int",{"_index":282,"title":{},"body":{"entities/CartItem.html":{},"entities/Product.html":{}}}],["interact",{"_index":753,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":408,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isglobal",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":23,"title":{},"body":{"classes/AddItemDto.html":{},"classes/CreateProductDto.html":{}}}],["isint()@min(0",{"_index":364,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isint()@min(1",{"_index":20,"title":{},"body":{"classes/AddItemDto.html":{}}}],["isnotempty",{"_index":367,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumber",{"_index":368,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":361,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":369,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispasswordmatching",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":366,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isstring()@isnotempty",{"_index":359,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@isoptional",{"_index":357,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@minlength(8",{"_index":410,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isuuid",{"_index":16,"title":{},"body":{"classes/AddItemDto.html":{},"classes/CreateOrderDto.html":{}}}],["item",{"_index":329,"title":{},"body":{"injectables/CartService.html":{},"entities/Order.html":{}}}],["item.dto",{"_index":264,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["item.dto.ts",{"_index":7,"title":{},"body":{"classes/AddItemDto.html":{},"coverage.html":{}}}],["item.dto.ts:5",{"_index":18,"title":{},"body":{"classes/AddItemDto.html":{}}}],["item.dto.ts:9",{"_index":21,"title":{},"body":{"classes/AddItemDto.html":{}}}],["item.entity",{"_index":246,"title":{},"body":{"entities/Cart.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["item.entity.ts",{"_index":272,"title":{},"body":{"entities/CartItem.html":{},"entities/OrderItem.html":{},"coverage.html":{}}}],["item.entity.ts:10",{"_index":447,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:11",{"_index":278,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:13",{"_index":443,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:14",{"_index":280,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:16",{"_index":446,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:17",{"_index":283,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:19",{"_index":448,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:20",{"_index":276,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:22",{"_index":445,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:7",{"_index":442,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:8",{"_index":277,"title":{},"body":{"entities/CartItem.html":{}}}],["item.id",{"_index":342,"title":{},"body":{"injectables/CartService.html":{}}}],["item.order",{"_index":421,"title":{},"body":{"entities/Order.html":{}}}],["item.productid",{"_index":330,"title":{},"body":{"injectables/CartService.html":{}}}],["items",{"_index":228,"title":{},"body":{"entities/Cart.html":{},"injectables/CartService.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{}}}],["job",{"_index":768,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":770,"title":{},"body":{"index.html":{}}}],["joi",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["joi.object",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":781,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["jwt.strategy",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_secret",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":144,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":161,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":786,"title":{},"body":{"index.html":{}}}],["key",{"_index":699,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":377,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["learn",{"_index":738,"title":{},"body":{"index.html":{}}}],["legend",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":792,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":773,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":767,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":127,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":710,"title":{},"body":{"index.html":{}}}],["loop",{"_index":763,"title":{},"body":{"index.html":{}}}],["makes",{"_index":718,"title":{},"body":{"index.html":{}}}],["managing",{"_index":731,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":284,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{}}}],["manytoone(undefined",{"_index":274,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{}}}],["matching",{"_index":29,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":714,"title":{},"body":{"index.html":{}}}],["maxdecimalplaces",{"_index":370,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["metadata",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":24,"title":{},"body":{"classes/AddItemDto.html":{},"classes/CreateProductDto.html":{}}}],["min(0",{"_index":372,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["min(1",{"_index":27,"title":{},"body":{"classes/AddItemDto.html":{}}}],["minlength",{"_index":412,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(8",{"_index":413,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":656,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":772,"title":{},"body":{"index.html":{}}}],["mode",{"_index":684,"title":{},"body":{"index.html":{}}}],["module",{"_index":45,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":47,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":708,"title":{},"body":{"index.html":{}}}],["my_ecommerce_db",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["myśliwiec",{"_index":787,"title":{},"body":{"index.html":{}}}],["name",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":758,"title":{},"body":{"index.html":{}}}],["nest",{"_index":672,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":791,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":697,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["nestjs/core",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nestjs/mapped",{"_index":588,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["nestjs/platform",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["newcart",{"_index":319,"title":{},"body":{"injectables/CartService.html":{}}}],["newcartitem",{"_index":334,"title":{},"body":{"injectables/CartService.html":{}}}],["newcartitem.product",{"_index":335,"title":{},"body":{"injectables/CartService.html":{}}}],["newcartitem.productid",{"_index":336,"title":{},"body":{"injectables/CartService.html":{}}}],["newcartitem.quantity",{"_index":338,"title":{},"body":{"injectables/CartService.html":{}}}],["neworder",{"_index":498,"title":{},"body":{"injectables/OrdersService.html":{}}}],["neworder.items",{"_index":500,"title":{},"body":{"injectables/OrdersService.html":{}}}],["neworder.items.push(orderitem",{"_index":508,"title":{},"body":{"injectables/OrdersService.html":{}}}],["neworder.total",{"_index":509,"title":{},"body":{"injectables/OrdersService.html":{}}}],["neworder.userid",{"_index":499,"title":{},"body":{"injectables/OrdersService.html":{}}}],["node.js",{"_index":664,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":315,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`cart",{"_index":323,"title":{},"body":{"injectables/CartService.html":{}}}],["notfoundexception(`product",{"_index":576,"title":{},"body":{"injectables/ProductsService.html":{}}}],["nullable",{"_index":517,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["number",{"_index":19,"title":{},"body":{"classes/AddItemDto.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["offer",{"_index":769,"title":{},"body":{"index.html":{}}}],["official",{"_index":715,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":244,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["onetomany(undefined",{"_index":236,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["open",{"_index":774,"title":{},"body":{"index.html":{}}}],["optional",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":414,"title":{"entities/Order.html":{}},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["order.dto",{"_index":464,"title":{},"body":{"controllers/OrdersController.html":{}}}],["order.dto.ts",{"_index":349,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:5",{"_index":350,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.entity",{"_index":449,"title":{},"body":{"entities/OrderItem.html":{}}}],["order.items",{"_index":444,"title":{},"body":{"entities/OrderItem.html":{}}}],["orderitem",{"_index":420,"title":{"entities/OrderItem.html":{}},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["orderitem.name",{"_index":503,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitem.price",{"_index":505,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitem.productid",{"_index":501,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitem.quantity",{"_index":507,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderrepository",{"_index":486,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":452,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":477,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":461,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":450,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":59,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":460,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":423,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.pending",{"_index":440,"title":{},"body":{"entities/Order.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":796,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":639,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paid",{"_index":436,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":259,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{}}}],["param('id",{"_index":269,"title":{},"body":{"controllers/CartController.html":{}}}],["parameters",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["parseuuidpipe",{"_index":260,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{}}}],["part",{"_index":759,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":587,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createproductdto",{"_index":586,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passport",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["password_hash",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["patch",{"_index":541,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch(':id",{"_index":539,"title":{},"body":{"controllers/ProductsController.html":{}}}],["payload",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":435,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["pg",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":713,"title":{},"body":{"index.html":{}}}],["please",{"_index":741,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":678,"title":{},"body":{"index.html":{}}}],["populated",{"_index":467,"title":{},"body":{"controllers/OrdersController.html":{}}}],["port",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":705,"title":{},"body":{"index.html":{}}}],["post",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{}}}],["post(':id/items",{"_index":253,"title":{},"body":{"controllers/CartController.html":{}}}],["post('checkout",{"_index":456,"title":{},"body":{"controllers/OrdersController.html":{}}}],["post('login",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["precision",{"_index":429,"title":{},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["prefix",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{}}}],["price",{"_index":355,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["primarygeneratedcolumn",{"_index":243,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":233,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["private",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["prod",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["product",{"_index":273,"title":{"entities/Product.html":{}},"body":{"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["product.dto",{"_index":544,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":353,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":358,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:14",{"_index":363,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":365,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:6",{"_index":360,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.id",{"_index":337,"title":{},"body":{"injectables/CartService.html":{}}}],["productid",{"_index":10,"title":{},"body":{"classes/AddItemDto.html":{},"entities/CartItem.html":{},"entities/OrderItem.html":{}}}],["production",{"_index":686,"title":{},"body":{"index.html":{}}}],["productrepository",{"_index":565,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products",{"_index":526,"title":{},"body":{"controllers/ProductsController.html":{}}}],["products.controller",{"_index":559,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":543,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/entities/product.entity",{"_index":286,"title":{},"body":{"entities/CartItem.html":{}}}],["products/products.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{}}}],["products/products.service",{"_index":317,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["productscontroller",{"_index":524,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":60,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":301,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":663,"title":{},"body":{"index.html":{}}}],["project",{"_index":675,"title":{},"body":{"index.html":{}}}],["promise",{"_index":307,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddItemDto.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["quantity",{"_index":11,"title":{},"body":{"classes/AddItemDto.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/OrderItem.html":{}}}],["questions",{"_index":739,"title":{},"body":{"index.html":{}}}],["read",{"_index":782,"title":{},"body":{"index.html":{}}}],["readme",{"_index":662,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":695,"title":{},"body":{"index.html":{}}}],["real",{"_index":754,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":131,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["relations",{"_index":512,"title":{},"body":{"injectables/OrdersService.html":{}}}],["remove",{"_index":528,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["remove(@param('id",{"_index":553,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(id",{"_index":534,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["removeitem",{"_index":297,"title":{},"body":{"injectables/CartService.html":{}}}],["removeitem(cartid",{"_index":310,"title":{},"body":{"injectables/CartService.html":{}}}],["repository",{"_index":300,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{}}}],["req.user",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{}}}],["req.user.userid",{"_index":470,"title":{},"body":{"controllers/OrdersController.html":{}}}],["request",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{}}}],["requiring",{"_index":721,"title":{},"body":{"index.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":733,"title":{},"body":{"index.html":{}}}],["result",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductsService.html":{}}}],["result.affected",{"_index":579,"title":{},"body":{"injectables/ProductsService.html":{}}}],["results",{"_index":28,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["routes",{"_index":804,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":680,"title":{},"body":{"index.html":{}}}],["runs",{"_index":703,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":668,"title":{},"body":{"index.html":{}}}],["scale",{"_index":430,"title":{},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{}}}],["schema",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["secret",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":669,"title":{},"body":{"index.html":{}}}],["setup",{"_index":676,"title":{},"body":{"index.html":{}}}],["shipped",{"_index":437,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":670,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":723,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":777,"title":{},"body":{"index.html":{}}}],["src/.../config.schema.ts",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.entity.ts",{"_index":658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":407,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:4",{"_index":409,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:8",{"_index":411,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":580,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:12",{"_index":582,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":583,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:5",{"_index":581,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:9",{"_index":584,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/cart/cart.controller.ts",{"_index":248,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:10",{"_index":255,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:15",{"_index":258,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:20",{"_index":254,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":291,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":296,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:10",{"_index":302,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:17",{"_index":308,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:22",{"_index":309,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:30",{"_index":305,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:51",{"_index":314,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:74",{"_index":312,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/dto/add",{"_index":6,"title":{},"body":{"classes/AddItemDto.html":{},"coverage.html":{}}}],["src/cart/entities/cart",{"_index":271,"title":{},"body":{"entities/CartItem.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts",{"_index":225,"title":{},"body":{"entities/Cart.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts:10",{"_index":240,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:13",{"_index":232,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:16",{"_index":242,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:7",{"_index":234,"title":{},"body":{"entities/Cart.html":{}}}],["src/config.schema.ts",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/dto/create",{"_index":348,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/orders/entities/order",{"_index":441,"title":{},"body":{"entities/OrderItem.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts",{"_index":415,"title":{},"body":{"entities/Order.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/orders/entities/order.entity.ts:16",{"_index":419,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:19",{"_index":432,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:22",{"_index":433,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:25",{"_index":422,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:28",{"_index":431,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:35",{"_index":427,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:38",{"_index":418,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":451,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:12",{"_index":457,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:18",{"_index":459,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":476,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":481,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:10",{"_index":485,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:18",{"_index":488,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:45",{"_index":490,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/products/dto/create",{"_index":352,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dto/update",{"_index":585,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/products/entities/product.entity.ts",{"_index":514,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/entities/product.entity.ts:12",{"_index":518,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:15",{"_index":521,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:18",{"_index":522,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:21",{"_index":515,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:24",{"_index":523,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:6",{"_index":519,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:9",{"_index":520,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":525,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:11",{"_index":531,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:16",{"_index":532,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:21",{"_index":533,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:26",{"_index":540,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:31",{"_index":536,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":558,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":562,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:15",{"_index":566,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:20",{"_index":567,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:24",{"_index":568,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:32",{"_index":570,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:43",{"_index":569,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:9",{"_index":564,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/users/dto/create",{"_index":374,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":590,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":598,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":595,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":597,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:21",{"_index":591,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:24",{"_index":599,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":596,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":593,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.module.ts",{"_index":604,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":682,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":685,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":687,"title":{},"body":{"index.html":{}}}],["starter",{"_index":674,"title":{},"body":{"index.html":{}}}],["statements",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":416,"title":{},"body":{"entities/Order.html":{}}}],["stay",{"_index":762,"title":{},"body":{"index.html":{}}}],["steps",{"_index":700,"title":{},"body":{"index.html":{}}}],["stock",{"_index":356,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["straightforward",{"_index":719,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/AddItemDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":740,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":794,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":701,"title":{},"body":{"index.html":{}}}],["test",{"_index":690,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":693,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":692,"title":{},"body":{"index.html":{}}}],["tests",{"_index":688,"title":{},"body":{"index.html":{}}}],["text",{"_index":516,"title":{},"body":{"entities/Product.html":{}}}],["thanks",{"_index":776,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cartrepository.create",{"_index":320,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.findoneby",{"_index":322,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.save(cart",{"_index":340,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.save(newcart",{"_index":321,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartservice.additem(id",{"_index":270,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.create",{"_index":266,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findone(cartid",{"_index":494,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.cartservice.findone(id",{"_index":268,"title":{},"body":{"controllers/CartController.html":{}}}],["this.findone(cartid",{"_index":325,"title":{},"body":{"injectables/CartService.html":{}}}],["this.jwtservice.sign(payload",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderrepository.find",{"_index":511,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderrepository.save(neworder",{"_index":510,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.createfromcart(createorderdto.cartid",{"_index":469,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.finduserorders(req.user.userid",{"_index":472,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.productrepository.create(createproductdto",{"_index":572,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.delete(id",{"_index":578,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.find",{"_index":574,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findoneby",{"_index":575,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.preload",{"_index":577,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":573,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":548,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":549,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(additemdto.productid",{"_index":326,"title":{},"body":{"injectables/CartService.html":{}}}],["this.productsservice.findone(id",{"_index":550,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.remove(id",{"_index":554,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(id",{"_index":552,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.userrepository.create(createuserdto",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findoneby",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(logindto.email",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(registerdto.email",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["time",{"_index":755,"title":{},"body":{"index.html":{}}}],["total",{"_index":417,"title":{},"body":{"entities/Order.html":{},"injectables/OrdersService.html":{}}}],["touch",{"_index":784,"title":{},"body":{"index.html":{}}}],["true",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["twitter",{"_index":790,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AddItemDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeorm",{"_index":245,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([cart",{"_index":295,"title":{},"body":{"modules/CartModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":480,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":561,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":607,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":589,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":673,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":426,"title":{},"body":{"entities/Order.html":{}}}],["unique",{"_index":600,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":689,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":803,"title":{},"body":{"properties.html":{}}}],["update",{"_index":529,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["update(@param('id",{"_index":551,"title":{},"body":{"controllers/ProductsController.html":{}}}],["update(id",{"_index":537,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatedat",{"_index":229,"title":{},"body":{"entities/Cart.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":241,"title":{},"body":{"entities/Cart.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["updateitemquantity",{"_index":298,"title":{},"body":{"injectables/CartService.html":{}}}],["updateitemquantity(cartid",{"_index":313,"title":{},"body":{"injectables/CartService.html":{}}}],["updateproductdto",{"_index":538,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":764,"title":{},"body":{"index.html":{}}}],["use",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["usefactory",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{}}}],["useguards(jwtauthguard",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":205,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"entities/Order.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":375,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":378,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password_hash",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["username",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":605,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":434,"title":{},"body":{"entities/Order.html":{}}}],["users/users.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":61,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":183,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":756,"title":{},"body":{"index.html":{}}}],["validate",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":25,"title":{},"body":{"classes/AddItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["value",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":805,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":801,"title":{},"body":{"properties.html":{}}}],["video",{"_index":748,"title":{},"body":{"index.html":{}}}],["visit",{"_index":737,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":751,"title":{},"body":{"index.html":{}}}],["watch",{"_index":683,"title":{},"body":{"index.html":{}}}],["website",{"_index":788,"title":{},"body":{"index.html":{}}}],["working",{"_index":736,"title":{},"body":{"index.html":{}}}],["world",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":766,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":780,"title":{},"body":{"index.html":{}}}],["you're",{"_index":694,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddItemDto.html":{"url":"classes/AddItemDto.html","title":"class - AddItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/add-item.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-item.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dto/add-item.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUID, IsInt, Min } from 'class-validator';\n\nexport class AddItemDto {\n  @IsUUID()\n  productId!: string;\n\n  @IsInt()\n  @Min(1)\n  quantity!: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductsModule } from './products/products.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { configValidationSchema } from './config.schema';\nimport { CartModule } from './cart/cart.module';\nimport { OrdersModule } from './orders/orders.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: configValidationSchema,\n      envFilePath: ['../../.env'],\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      username: 'postgres',\n      password: 'postgres',\n      database: 'my_ecommerce_db',\n      entities: [__dirname + '/**/*.entity{.ts,.js}'],\n      synchronize: true, // DEV only: auto-creates schema. Don't use in prod.\n    }),\n    ProductsModule,\n    UsersModule,\n    AuthModule,\n    CartModule,\n    OrdersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, HttpCode, HttpStatus } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { UseGuards, Get, Request } from '@nestjs/common';\nimport { JwtAuthGuard } from './jwt-auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  login(@Body() loginDto: LoginDto) {\n    return this.authService.login(loginDto);\n  }\n\n  @Post('register')\n  register(@Body() registerDto: RegisterDto) {\n    return this.authService.register(registerDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req: any) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // apps/api/src/auth/auth.module.ts\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: {expiresIn: '1d'},\n      })\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  UnauthorizedException,\n  ConflictException,\n} from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async register(registerDto: RegisterDto) {\n    const existingUser = await this.usersService.findByEmail(registerDto.email);\n    if (existingUser) {\n      throw new ConflictException('Email already in use');\n    }\n\n    const password_hash = await bcrypt.hash(registerDto.password, 10);\n\n    const user = await this.usersService.create({\n      ...registerDto,\n      password_hash,\n    });\n\n    const { password_hash: _, ...result } = user;\n    return result;\n  }\n\n  async login(loginDto: LoginDto) {\n    const user = await this.usersService.findByEmail(loginDto.email);\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const isPasswordMatching = await bcrypt.compare(\n      loginDto.password,\n      user.password_hash,\n    );\n\n    if (!isPasswordMatching) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const payload = { sub: user.id, email: user.email };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cart.html":{"url":"entities/Cart.html","title":"entity - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cartItem => cartItem.cart, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, OneToMany, CreateDateColumn, UpdateDateColumn } from 'typeorm';\nimport { CartItem } from './cart-item.entity';\n\n@Entity()\nexport class Cart {\n  @PrimaryGeneratedColumn('uuid')\n  id!: string;\n\n  @OneToMany(() => CartItem, (cartItem) => cartItem.cart, { cascade: true, eager: true })\n  items!: CartItem[];\n\n  @CreateDateColumn()\n  createdAt!: Date;\n\n  @UpdateDateColumn()\n  updatedAt!: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addItem\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    addItem(id: string, addItemDto: AddItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/items')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addItemDto\n                                            \n                                                            AddItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Get, Param, Body, ParseUUIDPipe } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { AddItemDto } from './dto/add-item.dto';\n\n@Controller('cart')\nexport class CartController {\n  constructor(private readonly cartService: CartService) {}\n\n  @Post()\n  create() {\n    return this.cartService.create();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.cartService.findOne(id);\n  }\n\n  @Post(':id/items')\n  addItem(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body() addItemDto: AddItemDto,\n  ) {\n    return this.cartService.addItem(id, addItemDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CartItem.html":{"url":"entities/CartItem.html","title":"entity - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart-item.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cart\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cart => cart.items)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Cart } from './cart.entity';\nimport { Product } from '../../products/entities/product.entity';\n\n@Entity()\nexport class CartItem {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @ManyToOne(() => Product, { eager: true })\n  product!: Product;\n\n  @Column()\n  productId!: string;\n\n  @Column({ type: 'int' })\n  quantity!: number;\n\n  @ManyToOne(() => Cart, (cart) => cart.items)\n  cart!: Cart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartModule\n\n\n\ncluster_CartModule_imports\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CartModule_exports\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nProductsModule->CartModule\n\n\n\n\n\nCartService \n\nCartService \n\nCartService  -->\n\nCartModule->CartService \n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CartService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CartController } from './cart.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Cart } from './entities/cart.entity';\nimport { CartItem } from './entities/cart-item.entity';\nimport { ProductsModule } from '../products/products.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Cart, CartItem]),\n    ProductsModule\n  ],\n  providers: [CartService],\n  controllers: [CartController],\n  exports: [CartService]\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItem\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                    Async\n                                updateItemQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/cart/cart.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    addItem(cartId: string, addItemDto: AddItemDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addItemDto\n                                            \n                                                            AddItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeItem(cartId: string, cartItemId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartItemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateItemQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateItemQuantity(cartId: string, cartItemId: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartItemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Cart } from './entities/cart.entity';\nimport { CartItem } from './entities/cart-item.entity';\nimport { AddItemDto } from './dto/add-item.dto';\nimport { ProductsService } from '../products/products.service';\n\n@Injectable()\nexport class CartService {\n  constructor(\n    @InjectRepository(Cart)\n    private readonly cartRepository: Repository,\n    private readonly productsService: ProductsService,\n  ) {}\n\n  async create(): Promise {\n    const newCart = this.cartRepository.create({ items: [] });\n    return this.cartRepository.save(newCart);\n  }\n\n  async findOne(id: string): Promise {\n    const cart = await this.cartRepository.findOneBy({ id });\n    if (!cart) {\n      throw new NotFoundException(`Cart with ID \"${id}\" not found`);\n    }\n    return cart;\n  }\n\n  async addItem(cartId: string, addItemDto: AddItemDto): Promise {\n    const cart = await this.findOne(cartId);\n    const product = await this.productsService.findOne(addItemDto.productId);\n\n    const existingItem = cart.items.find(\n      (item) => item.productId === addItemDto.productId,\n    );\n\n    if (existingItem) {\n      existingItem.quantity += addItemDto.quantity;\n    } else {\n      const newCartItem = new CartItem();\n      newCartItem.product = product;\n      newCartItem.productId = product.id;\n      newCartItem.quantity = addItemDto.quantity;\n      cart.items.push(newCartItem);\n    }\n\n    return this.cartRepository.save(cart);\n  }\n\n  async updateItemQuantity(\n    cartId: string,\n    cartItemId: number,\n    quantity: number,\n  ): Promise {\n    const cart = await this.findOne(cartId);\n    const cartItem = cart.items.find((item) => item.id === cartItemId);\n\n    if (!cartItem) {\n      throw new NotFoundException(\n        `Item with ID \"${cartItemId}\" not found in cart`,\n      );\n    }\n\n    if (quantity  item.id !== cartItemId);\n    } else {\n      cartItem.quantity = quantity;\n    }\n\n    return this.cartRepository.save(cart);\n  }\n\n  async removeItem(cartId: string, cartItemId: number): Promise {\n    const cart = await this.findOne(cartId);\n    const initialLength = cart.items.length;\n    cart.items = cart.items.filter((item) => item.id !== cartItemId);\n\n    if (cart.items.length === initialLength) {\n      throw new NotFoundException(\n        `Item with ID \"${cartItemId}\" not found in cart`,\n      );\n    }\n\n    return this.cartRepository.save(cart);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cartId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUUID } from 'class-validator';\n\nexport class CreateOrderDto {\n  @IsUUID()\n  cartId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsNumber, IsInt, Min, IsOptional } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name!: string;\n\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @IsNumber({ maxDecimalPlaces: 2 })\n  @Min(0)\n  price!: number;\n\n  @IsInt()\n  @Min(0)\n  stock!: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                password_hash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  email!: string;\n  password_hash!: string;\n  firstName?: string;\n  lastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET')!,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, MinLength } from 'class-validator';\nexport class LoginDto {\n  @IsEmail()\n  email!: string;\n\n  @IsString()\n  @MinLength(8)\n  password!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.order, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: OrderStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from '../../users/entities/user.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, ManyToOne, OneToMany } from 'typeorm';\nimport { OrderItem } from './order-item.entity';\n\nexport enum OrderStatus {\n  PENDING = 'PENDING',\n  PAID = 'PAID',\n  SHIPPED = 'SHIPPED',\n  DELIVERED = 'DELIVERED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity()\nexport class Order {\n  @PrimaryGeneratedColumn('uuid')\n  id!: string;\n\n  @ManyToOne(() => User)\n  user!: User;\n\n  @Column()\n  userId!: string;\n\n  @OneToMany(() => OrderItem, (item) => item.order, { cascade: true })\n  items!: OrderItem[];\n\n  @Column({ type: 'decimal', precision: 10, scale: 2 })\n  total!: number;\n\n  @Column({\n    type: 'enum',\n    enum: OrderStatus,\n    default: OrderStatus.PENDING,\n  })\n  status!: OrderStatus;\n\n  @CreateDateColumn()\n  createdAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrderItem.html":{"url":"entities/OrderItem.html","title":"entity - OrderItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  OrderItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order-item.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                order\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, order => order.items)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Order } from './order.entity';\n\n@Entity()\nexport class OrderItem {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @Column()\n  productId!: string;\n\n  @Column()\n  name!: string;\n\n  @Column({ type: 'decimal', precision: 10, scale: 2 })\n  price!: number;\n\n  @Column()\n  quantity!: number;\n\n  @ManyToOne(() => Order, (order) => order.items)\n  order!: Order;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createOrder\n                            \n                            \n                                    \n                                findMyOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(req: any, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('checkout')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findMyOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMyOrders(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Request, Get } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@UseGuards(JwtAuthGuard)\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  @Post('checkout')\n  createOrder(@Request() req: any, @Body() createOrderDto: CreateOrderDto) {\n    // req.user is populated by JwtAuthGuard and contains { userId, email }\n    return this.ordersService.createFromCart(createOrderDto.cartId, req.user.userId);\n  }\n\n  @Get()\n  findMyOrders(@Request() req: any) {\n    return this.ordersService.findUserOrders(req.user.userId);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_imports\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nCartModule\n\nCartModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nCartModule->OrdersModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nOrdersModule -->\n\nProductsModule->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CartModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { Order } from './entities/order.entity';\nimport { OrderItem } from './entities/order-item.entity';\nimport { CartModule } from '../cart/cart.module';\nimport { ProductsModule } from '../products/products.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Order, OrderItem]),\n    CartModule,\n    ProductsModule,\n  ],\n  controllers: [OrdersController],\n  providers: [OrdersService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFromCart\n                            \n                            \n                                    Async\n                                findUserOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepository: Repository, cartService: CartService, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFromCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFromCart(cartId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserOrders(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Order} from './entities/order.entity';\nimport { OrderItem} from './entities/order-item.entity';\nimport { CartService } from '../cart/cart.service';\nimport { ProductsService } from '../products/products.service';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    @InjectRepository(Order)\n    private readonly orderRepository: Repository,\n    private readonly cartService: CartService,\n    private readonly productsService: ProductsService,\n  ) {}\n\n  async createFromCart(cartId: string, userId: string): Promise {\n    const cart = await this.cartService.findOne(cartId);\n\n    if (cart.items.length === 0) {\n      throw new BadRequestException('Cannot create an order from an empty cart.');\n    }\n\n    const newOrder = new Order();\n    newOrder.userId = userId;\n    newOrder.items = [];\n    let total = 0;\n\n    for (const cartItem of cart.items) {\n      const orderItem = new OrderItem();\n      orderItem.productId = cartItem.productId;\n      orderItem.name = cartItem.product.name;\n      orderItem.price = cartItem.product.price;\n      orderItem.quantity = cartItem.quantity;\n      newOrder.items.push(orderItem);\n      total += cartItem.product.price * cartItem.quantity;\n    }\n\n    newOrder.total = total;\n\n    return this.orderRepository.save(newOrder);\n  }\n\n  async findUserOrders(userId: string): Promise {\n    return this.orderRepository.find({\n        where: { userId },\n        relations: ['items'],\n        order: { createdAt: 'DESC' },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id!: string;\n\n  @Column()\n  name!: string;\n\n  @Column({ type: 'text', nullable: true })\n  description!: string;\n\n  @Column({ type: 'decimal', precision: 10, scale: 2 })\n  price!: number;\n\n  @Column({ type: 'int' })\n  stock!: number;\n\n  @CreateDateColumn()\n  createdAt!: Date;\n\n  @UpdateDateColumn()\n  updatedAt!: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, ParseUUIDPipe } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productsService.create(createProductDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.productsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseUUIDPipe) id: string) {\n    return this.productsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id', ParseUUIDPipe) id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productsService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id', ParseUUIDPipe) id: string) {\n    return this.productsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_exports\n\n\n\n\nProductsService \n\nProductsService \n\n\n\nProductsModule\n\nProductsModule\n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { Product } from './entities/product.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Product])],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n  exports: [ProductsService]\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n  ) {}\n\n  create(createProductDto: CreateProductDto): Promise {\n    const product = this.productRepository.create(createProductDto);\n    return this.productRepository.save(product);\n  }\n\n  findAll(): Promise {\n    return this.productRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const product = await this.productRepository.findOneBy({ id });\n    if (!product) {\n      throw new NotFoundException(`Product with ID \"${id}\" not found`);\n    }\n    return product;\n  }\n\n  async update(id: string, updateProductDto: UpdateProductDto): Promise {\n    const product = await this.productRepository.preload({\n      id: id,\n      ...updateProductDto,\n    });\n    if (!product) {\n      throw new NotFoundException(`Product with ID \"${id}\" not found`);\n    }\n    return this.productRepository.save(product);\n  }\n\n  async remove(id: string): Promise {\n    const result = await this.productRepository.delete(id);\n    if (result.affected === 0) {\n      throw new NotFoundException(`Product with ID \"${id}\" not found`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, MinLength } from 'class-validator';\n\nexport class RegisterDto {\n  @IsEmail()\n  email!: string;\n\n  @IsString()\n  @MinLength(8)\n  password!: string;\n\n  @IsString()\n  firstName!: string;\n\n  @IsString()\n  lastName!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                password_hash\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id!: string;\n\n  @Column({ unique: true })\n  email!: string;\n\n  @Column()\n  password_hash!: string;\n\n  @Column({ nullable: true })\n  firstName?: string;\n\n  @Column({ nullable: true })\n  lastName?: string;\n\n  @CreateDateColumn()\n  createdAt!: Date;\n\n  @UpdateDateColumn()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './entities/user.entity';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async findByEmail(email: string): Promise {\n    return this.userRepository.findOneBy({ email });\n  }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const user = this.userRepository.create(createUserDto);\n    return this.userRepository.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/cart/dto/add-item.dto.ts\n            \n            class\n            AddItemDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/cart/entities/cart-item.entity.ts\n            \n            entity\n            CartItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/cart/entities/cart.entity.ts\n            \n            entity\n            Cart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config.schema.ts\n            \n            variable\n            configValidationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/orders/entities/order-item.entity.ts\n            \n            entity\n            OrderItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/orders/entities/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/products/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/products/entities/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            joi : ^18.0.1\n        \n            pg : ^8.16.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.27\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderStatus   (src/.../order.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/orders/entities/order.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 PAID\n                            \n                        \n                        \n                            \n                                Value : PAID\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : SHIPPED\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_exports\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nCartModule->OrdersModule\n\n\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCartService \n\nCartService \n\nCartService  -->\n\nCartModule->CartService \n\n\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nCartModule -->\n\nProductsModule->CartModule\n\n\n\nOrdersModule -->\n\nProductsModule->OrdersModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configValidationSchema   (src/.../config.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configValidationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  JWT_SECRET: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
